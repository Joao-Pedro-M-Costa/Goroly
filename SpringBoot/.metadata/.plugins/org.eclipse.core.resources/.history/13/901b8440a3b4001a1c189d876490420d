package com.Goroly.rest;

import java.util.ArrayList;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.Goroly.DTO.UsuarioDTO;
import com.Goroly.domain.Carrinho;
import com.Goroly.domain.Endereco;
import com.Goroly.domain.Produto;
import com.Goroly.domain.Usuario;
import com.Goroly.service.UsuarioService;


@RestController
@RequestMapping("/api")
@CrossOrigin(origins = "*")
public class UsuarioRest {

	@Autowired
	private UsuarioService usuarioService ;
	
	@GetMapping("/usuario/saldo/{id}")
	public ResponseEntity<Long> getSaldoByCPF(@PathVariable  Long id) {
		return ResponseEntity.ok(usuarioService.getSaldoById(id));}
	
	@PostMapping("/usuario")
	public ResponseEntity<Usuario> salvar(@RequestBody @Valid UsuarioDTO usuario){
		Usuario aux=null;
		  
		return ResponseEntity.ok(usuarioService.salvar(aux));
		
	}
	@PutMapping("/usuario")
	public ResponseEntity<Usuario> update(@RequestBody @Valid UsuarioDTO usuario) {
		Usuario aux=new Usuario(
		(usuario.getCPF()),
		  (usuario.getSaldo()),
		  (usuario.getUsername());,
		  (usuario.getPassword());,
		  (usuario.getEmail());,
	      (usuario.getTelefone1());,
	      (usuario.getTelefone2());,
	      (usuario.getNome());,
	      (usuario.getSobrenome());,
	      (usuario.getNacionalidade());,
	      (usuario.getFusohorario());,
	      (usuario.getIdioma());,
	      (usuario.getDatanascimento());,
	      (usuario.getEnderecos());,
	      (usuario.getCarrinho()) 
		return ResponseEntity.ok(usuarioService.update(aux));
	}
	

	@GetMapping("/usuario/{id}")
	public ResponseEntity<UsuarioDTO> consultaPorCPF(@PathVariable Long id) {
		return ResponseEntity.ok(usuarioService.consultaPorId(id));
	}
	
	@GetMapping("/usuario")
	public ResponseEntity<List<UsuarioDTO>> listar() {
		return ResponseEntity.ok(usuarioService.listar());
	}

	@DeleteMapping("/usuario/{id}")
	public ResponseEntity deletePorCPF(@PathVariable Long id) {
		try {
			usuarioService.deletePorId(id);
			return ResponseEntity.ok().build();
		} catch (Exception e) {
			return ResponseEntity.badRequest().build();
		}

	}

}
